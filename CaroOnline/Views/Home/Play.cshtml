@using CaroOnline.Models
@model Cell[,]
@{
    ViewBag.Title = "Play";
}
<style>
    .check-board {
        cursor: pointer;
        user-select: none;
        /*border-image:url(/Content/rsz_border.jpg) 630 630 round;*/
        /*background-image:url(/Content/background.png);*/
        background-color: #ffcc99;
    }
</style>

<img src="~/Content/on.png" style="display:none" id="imgO" />
<img src="~/Content/x.png" style="display:none" id="imgX" />
<div class="col-lg-6" style="">
    
    <div class="card rounded check-board" style="width:630px;height:630px;border:2px solid #ffffff;">
        @* border:1px solid #d3d3d3; *@
        <canvas id="TableChess" class="rounded " width="630" height="630" style="pointer-events:none"></canvas>
        @*onclick="storeGuess(event)"*@
    </div>
</div>
<div class="col-lg-3 col-md-3 pr-2">
    
        <div class="col-xl-12 mb-1 px-0">
            <ul class="nav nav-tabs nav-justified py-1 px-0 blue">
                <li class="nav-item  waves-effect waves-dark m-0">
                    <a class="nav-link active p-1 white darken-1" data-toggle="tab" href="#panelSocial" role="tab">
                        <h5 class="blue-text section-heading h5 m-0">

                            <i class="fa fa-info mr-1"></i>&nbsp; THÔNG TIN


                        </h5>
                    </a>

                </li>

            </ul>

            <div class="tab-content card px-1 rounded-top pb-0" style="height:90px">

                <div class="tab-pane fade in show active " id="panelSocial" role="tabpanel">
                    <div class="text-center">
                        <h6 class="black-text h6  " style="display:none" id="txtReady">Đang chờ người chơi sẵng sàng.</h6>
                        <h6 class="black-text h6  " style="display:none" id="txtTimer"></h6>
                    </div>

                </div>


            </div>
        </div>

    
    @*<div class=" card mb-2">
        <div class=" card-header primary-color white-text text-center p-0">
            <h4><i class="fa fa-info-circle mr-2"></i>THÔNG BÁO</h4>
            
        </div>
        <div class="card-body py-1 px-2 text-center">
            <h6 class="black-text h4 text-danger font-italic" style="display:none" id="txtReady">Đang chờ người chơi sẵng sàng.</h6>
            <h6 class="black-text h4 text-danger font-italic" style="display:none" id="txtTimer"></h6>
        </div>
    </div>*@
    <div class="card card-body text-center px-5">
        <div class="avatar mt-1 px-5 py-0">
            <img src="~/Content/default_user.png" class="rounded-circle img-fluid">
        </div>
        <h5 class="font-bold">
            <strong id="uName2">Tài khoản</strong>
        </h5>
        <div class="">
            
        </div>
        <div class="d-flex justify-content-center">
            <h5 class="badge badge-pill yellow font-weight-light mr-1">
                <span class="h6" id="compentitorPoint">

                </span>
            </h5>
        
        <h5 class="badge badge-pill success-color font-weight-light mr-1" >
            <span class="h6" id="compentitorWin">

            </span>
        </h5>
        <h5 class="badge badge-pill danger-color font-weight-light mr-1" >
            <span class="h6" id="compentitorLost">

            </span>
        </h5>
        <h5 class="badge badge-pill special-color font-weight-light mr-1" >
            <span class="h6" id="compentitorEqual">

            </span>    
        </h5>
    </div>
    
    
        

    </div>
    @*<h2 id="test"></h2>*@
    <div class="d-flex justify-content-start">
        <img class="my-1" src="~/Content/loading.svg" style="width:20px;height:20px" />
        <div class="progress my-1" style="height: 20px">
            <div id="TimeCount" class="progress-bar progress-bar-striped" role="progressbar" style="width: 0%; height: 20px" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </div>
    
    <button class="btn btn-primary btn-block btn-lg mb-1" disabled id="btnSave"><i class="fa fa-save mr-2"></i>LƯU VÁN ĐẤU</button>
    <button class="btn btn-default btn-block btn-lg mb-1" disabled id="btnGameOver"><i class="fa fa-circle-thin mr-2"></i>ĐẦU HÀNG</button>
    <button class="btn btn-success btn-block btn-lg mb-1" id="btnReady" style="display:none"><i class="fa fa-check mr-2"></i>SẴNG SÀNG</button>
    <button class="btn btn-danger btn-block btn-lg mb-1" id="btnStart" style="display:none"><i class="fa fa-paper-plane-o mr-2"></i>BẮT ĐẦU</button>
    
    @*<button class="btn btn-warning" id="btnTestHub">Test Hub</button>*@

</div>
<div class="modal fade show" id="modalLoginAvatarDemo" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog cascading-modal modal-avatar modal-md" role="document">
        <!--Content-->
        <div class="modal-content">

            <!--Body-->
            <div class="modal-body text-center  px-2 py-1">
                <h2 class="red-text modal-title font-weight-bold">TRẬN ĐẤU KẾT THÚC</h2>
                <hr class="red d-inline-block mt-0 mb-3" style="width:25%;height:2px" />

                <div class="mb-2 ">

                    <h4 id="msgWin" class="blue-text h4 font-weight-bold"><i class="fa fa-trophy mr-2"></i>BẠN ĐÃ CHIẾN THẮNG <span class="ml-3 warning-text">+90 điểm</span></h4>
                    <h4 id="msgLost" class="warning-text h4 font-weight-bold"><i class="fa fa-frown-o mr-2"></i>BẠN ĐÃ THUA <span class="ml-3 black-text">-100 điểm</span></h4>
                    <h4 id="msgClaim" class="primary-text h4 font-weight-bold"><i class="fa fa-smile-o mr-2"></i>HÒA CỜ</h4>
                    <div id="loaderEndGame">
                        <img src="~/Content/loading.svg" style="width:40px;height:40px" />Vui lòng đợi lưu kết quả trận đấu.
                    </div>
                </div>
                <a href="/" id="backHome" class="btn btn-lg btn-outline-success font-weight-bold disabled">VỀ TRANG CHỦ<i class="ml-2 fa fa-home"></i></a>
            </div>

        </div>
        <!--/.Content-->
    </div>
</div>
<div class="modal fade show" id="modalSaving" tabindex="-1" role="dialog" aria-labelledby="lblSave" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog cascading-modal modal-avatar modal-md" role="document">
        <!--Content-->
        <h5 class="modal-title" id="lblSave">Thông báo</h5>
        <div class="modal-content">

            <!--Body-->
            <div class="modal-body text-center  px-2 py-1">

                <div id="loaderSaving">
                    <h4>Việc lưu ván đấu đang chơi sẽ làm dừng ván đấu và bạn sẽ bị trừ 50 điểm. Bạn  vẫn có thể tiếp tục ván đấu đã lưu .</h4>
                    <img src="~/Content/loading.svg" style="width:40px;height:40px" />
                </div>

                <button class="btn btn-outline-danger" id="btnSubmitSave"><i class="fa fa-save mr-2"></i> Lưu</button>
                <button class="btn btn-danger" id="btnBackSave"><i class="fa fa-backward"></i> Quay lại</button>
            </div>

        </div>
        <!--/.Content-->
    </div>
</div>
<form id="frmSaved" method="post" action="/Home/Saved">
    <input name="idgame" type="hidden"/>
    <input name="u1" type="hidden" />
    <input name="u2" type="hidden" />
    <input name="turn" type="hidden" />
    <input name="chess" type="hidden" />

</form>

@section js{
    <script src="~/Scripts/Caro/Cell.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
    <script src="~/signalr/hubs"></script>

    <script>
        //#region cratechessboard
        var isPause = false;
        var turnUser = "";
        var curUName = "";
        var turnGameSave = null;
        //var t=;
        var ArrMaxtrix = [];
        for (var i = 0; i < 21; i++) {
            var arr1 = [];
            for (var j = 0; j < 21; j++) {
                arr1.push(new Cell(i, j, 0));
            }
            ArrMaxtrix.push(arr1);

        }

        var canvas = document.getElementById('TableChess');
        var context = canvas.getContext('2d');
        var imgX = document.getElementById("imgX");
        var imgO = document.getElementById("imgO");
        var currImg = imgX;

        var oldX = -1, oldY = -1;
        canvas.addEventListener('mousemove', function (evt) {
            if (turnUser != curUName) {
                //alert("không phải lượt của bạn");
                return;
            }
            var rect = canvas.getBoundingClientRect();
            var mouseX = evt.clientX - rect.left - 0.5;
            var mouseY = evt.clientY - rect.top;
            if (mouseX < 0 || mouseY < 0 || mouseX > 630 || mouseY > 630) {
                return;
            }
            if (mouseX % Cell.SizeRect() == 0 || mouseY % Cell.SizeRect() == 0) {
                return;
            }

            var oi = Math.floor(oldX / Cell.SizeRect()), oj = Math.floor(oldY / Cell.SizeRect());
            var i = Math.floor(mouseX / Cell.SizeRect()), j = Math.floor(mouseY / Cell.SizeRect());
            if (oi != -1 || oj != -1) {
                if (oi != i || oj != j) {

                    if (ArrMaxtrix[oi][oj].Owner == 0) {

                        //context.fillStyle = "white";
                        //context.fillRect((oi * Cell.SizeRect()) + 3, (oj * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect()-7);
                        context.clearRect((oi * Cell.SizeRect()) + 3, (oj * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect() - 7);

                        oldX = mouseX;
                        oldY = mouseY;
                    }
                }
            }
            oldX = mouseX;
            oldY = mouseY;
            if (ArrMaxtrix[i][j].Owner == 0) {
                context.drawImage(currImg, (i * Cell.SizeRect()) + 3, (j * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect() - 7);
            }
            $('#test').text(mouseX + " | " + mouseY);
        }, false);
        //draw point
        context.strokeStyle = '#6d4c41';
        for (var i = 1; i < 21; i++) {
            for (var j = 0; j < 21; j++) {
                context.beginPath();
                context.arc(i * Cell.SizeRect(), j * Cell.SizeRect(), 1.25, 0, 2 * Math.PI, true);
                context.fill();
                context.stroke();
            }
        }
        context.beginPath();
        //draw line with x
        for (var i = 0; i < 21; i++) {

            context.moveTo(i * Cell.SizeRect(), 0);
            context.lineTo(i * Cell.SizeRect(), 630);


        }
        //draw line with y
        for (var i = 0; i < 22; i++) {

            context.moveTo(0, i * Cell.SizeRect());
            context.lineTo(630, i * Cell.SizeRect());
        }


        context.closePath();
        context.lineWidth = 1;
        context.strokeStyle = '#6d4c41';//rgba(76, 175, 80, 0.7)

        //'#3f51b5';
        context.stroke();
        //#endregion createchessboard
        $(document).ready(function () {

            var countTurn = 0;
            curUName = $('#currUserName').text().trim();
            var url_string = window.location.href;
            var url = new URL(url_string);
            var UserName1 = url.searchParams.get("uname1").trim();
            var UserName2 = url.searchParams.get("uname2").trim();
            var idgame = url.searchParams.get("idgame");
            if (idgame != null) {
                idgame = idgame.trim();
            }
            var countTime1, countTime;
            var competitorId, competitorImg, competitorOwner, currOwner;
            if (idgame != null) {//is restart game
                $.ajax({
                    url: "/Home/GetChess?idgame=" + idgame,
                    success: function (result) {
                        if (result.data != "") {
                            ArrMaxtrix = JSON.parse(result.data.Chess);
                            turnGameSave = result.data.Turrn;
                            for (var i = 0; i < 21; i++) {
                                for (var j = 0; j < 21; j++) {
                                    if (ArrMaxtrix[i][j].Owner == '1') {
                                        context.drawImage(imgO, (i * Cell.SizeRect()) + 3, (j * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect() - 7);
                                    }
                                    if (ArrMaxtrix[i][j].Owner == '2') {
                                        context.drawImage(imgX, (i * Cell.SizeRect()) + 3, (j * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect() - 7);
                                    }

                                }
                            }
                            context.stroke();
                        }
                    },
                    error: function (x, e) {
                        alert(x);
                    }
                });

            }
            $.connection.hub.qs = { 'UserName1': UserName1, 'UserName2': UserName2, 'curUName': curUName };
            var hgame = $.connection.gameHub;
            hgame.client.lostgame = function (turnu, i, j, type) {
                context.drawImage(competitorImg, (i * Cell.SizeRect()) + 3, (j * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect() - 7);
                ArrMaxtrix[i][j].Owner = currOwner;
                context.stroke();
                //alert("Bạn thua cmnr");
                $("#msgWin").css("display", "none");
                $("#msgClaim").css("display", "none");
                $("#msgLost").css("display", "block");
                if (type == "1") {
                    $("#msgClaim").css("display", "block");
                    $("#msgLost").css("display", "none");
                    $("#msgWin").css("display", "none");
                }

                $('#modalLoginAvatarDemo').modal('toggle');
            };


            hgame.client.paintchess = function (turnu, i, j, currOwner) {
                countTurn++;
                //alert(countTurn);
                if (currOwner > 0) {
                    context.drawImage(competitorImg, (i * Cell.SizeRect()) + 3, (j * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect() - 7);
                    ArrMaxtrix[i][j].Owner = currOwner;
                    context.stroke();
                }

                $('#TableChess').css("pointer-events", "auto");
                turnUser = curUName;
                $('#txtReady').text("LƯỢT CỦA BẠN");
                $('#txtReady').css('display', 'block');
                $("#TimeCount").removeClass();
                $("#TimeCount").addClass("progress-bar bg-success progress-bar-striped");
                var ms = 10;
                countTime = setInterval(function () {

                    $("#txtTimer").css("display", "block");
                    $("#txtTimer").text("Thời gian: " + Math.round(ms) + " giây");
                    $("#TimeCount").text(Math.round(ms) + " giây");
                    //$("#TimeCount").css("width", per + "%");
                    if (ms < 7 && ms > 4) {
                        $("#TimeCount").removeClass("bg-success");
                        $("#TimeCount").addClass("bg-primary");
                    }
                    if (ms <= 4 && ms > 2) {
                        $("#TimeCount").removeClass("bg-primary");
                        $("#TimeCount").addClass("bg-warning");
                    }
                    if (ms <= 2) {
                        $("#TimeCount").removeClass("bg-warning");
                        $("#TimeCount").addClass("bg-danger");
                    }

                    var per = ms * 10;
                    $("#TimeCount").attr("aria-valuenow", per);
                    $("#TimeCount").css("width", per + "%");
                    ms = ms - 0.01;
                    //if (ms < 0) {
                    //    clearInterval(countTime);
                    //    //$('#modalLoginAvatarDemo').modal('toggle');
                    //    //$("#btnNo").trigger("click");
                    //}

                    // ms = ms - 1;
                    if (isPause) {
                        ms = ms + 0.01;
                    }

                    if (ms <= 0) {
                        clearInterval(countTime);
                        $("#txtTimer").css("display", "none");
                        //alert("Bạn đã mất lượt.");
                        var oi = Math.floor(oldX / Cell.SizeRect()), oj = Math.floor(oldY / Cell.SizeRect());
                        if (oi >= 0 && oj >= 0) {
                            if (ArrMaxtrix[oi][oj].Owner == 0) {
                                context.clearRect((oi * Cell.SizeRect()) + 3, (oj * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect() - 7);
                            }
                        }
                        turnUser = $("#uName2").text().trim();
                        hgame.server.paintChess(turnUser, -1, -1, 0);
                        $('#txtReady').text("LƯỢT ĐI: " + turnUser);
                    }
                }, 10);
            };
            hgame.client.readygame = function () {
                $('#btnStart').removeAttr("disabled");
                $('#txtReady').text("Người chơi đã sẵng sàng hãy bắt đầu ngay!!!");
            }
            hgame.client.startgame = function () {
                $('#TableChess').css("pointer-events", "auto");
                $('#btnReady').attr("disabled", "disabled");
                $('#txtReady').text("");
                $('#txtReady').css('display', 'none');
                $("#btnSave").removeAttr("disabled");
                $("#btnGameOver").removeAttr("disabled");
                turnUser = $('#uName2').text().trim();
                if (idgame != null && turnGameSave != null) {
                    turnUser = turnGameSave;
                }
                if (turnUser == curUName) {
                    $('#txtReady').text("LƯỢT CỦA BẠN");
                    $("#TimeCount").removeClass();
                    $("#TimeCount").addClass("progress-bar bg-success progress-bar-striped");
                    var ms = 10;
                    countTime = setInterval(function () {

                        $("#txtTimer").css("display", "block");
                        $("#txtTimer").text("Thời gian: " + Math.round(ms) + " giây");
                        $("#TimeCount").text(Math.round(ms) + " giây");
                        //$("#TimeCount").css("width", per + "%");
                        if (ms < 7 && ms > 4) {
                            $("#TimeCount").removeClass("bg-success");
                            $("#TimeCount").addClass("bg-primary");
                        }
                        if (ms <= 4 && ms > 2) {
                            $("#TimeCount").removeClass("bg-primary");
                            $("#TimeCount").addClass("bg-warning");
                        }
                        if (ms <= 2) {
                            $("#TimeCount").removeClass("bg-warning");
                            $("#TimeCount").addClass("bg-danger");
                        }

                        var per = ms * 10;
                        $("#TimeCount").attr("aria-valuenow", per);
                        $("#TimeCount").css("width", per + "%");

                        ms = ms - 0.01;
                        //if (ms < 0) {
                        //    clearInterval(countTime);
                        //    //$('#modalLoginAvatarDemo').modal('toggle');
                        //    //$("#btnNo").trigger("click");
                        //}

                        // ms = ms - 1;

                        if (isPause) {
                            ms += 10;
                        }
                        if (ms <= 0) {
                            clearInterval(countTime);
                            $("#txtTimer").css("display", "none");
                            //alert("Bạn đã mất lượt.");
                            var oi = Math.floor(oldX / Cell.SizeRect()), oj = Math.floor(oldY / Cell.SizeRect());
                            if (oi >= 0 && oj >= 0) {
                                if (ArrMaxtrix[oi][oj].Owner == 0) {
                                    context.clearRect((oi * Cell.SizeRect()) + 3, (oj * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect() - 7);
                                }
                            }
                            turnUser = $("#uName2").text().trim();
                            hgame.server.paintChess(turnUser, -1, -1, 0);
                            $('#txtReady').text("LƯỢT ĐI: " + turnUser);
                            $("#TimeCount").attr("aria-valuenow", 0);
                            $("#TimeCount").css("width", 0 + "%");
                        }
                    }, 10);

                } else {
                    $('#txtReady').text("LƯỢT ĐI: " + turnUser);
                }
            }
            hgame.client.endgame = function () {
                $("#loaderEndGame").css("display", "none");
                $("#backHome").removeClass("disabled");
                console.log("Lưu game thành công!");
            }
            hgame.client.saved = function () {
                alert("đối thủ đã lưu game");
                window.location.href = "/";
            }
            hgame.client.hello = function (hello) {
                alert(hello);
            }
            $.connection.hub.start().done(function () {
                
                $('#btnTestHub').on('click', function () {
                    hgame.server.hello();
                });
                if (UserName1 != curUName) {//đối thủ là u1
                    $('#uName2').text(UserName1);
                    currImg = imgX;
                    //competitorId = cnnIDUser1;
                    competitorImg = imgO;
                    competitorOwner = 1;
                    currOwner = 2;
                    //hgame.server.updateCnnID(UserName1);
                    $('#btnReady').css('display', 'block');
                    $('#txtReady').text('Hãy sẵng sàng để bắt đầu trận đấu.');
                    $('#txtReady').css('display', 'block');

                } else if (UserName2 != curUName) {//đối thủ là u2
                    $('#uName2').text(UserName2);
                    currImg = imgO;
                    //competitorId = cnnIDUser2;
                    competitorImg = imgX;
                    competitorOwner = 2;
                    currOwner = 1;
                    //hgame.server.updateCnnID(UserName2);
                    $('#btnStart').css('display', 'block');
                    $('#btnStart').attr("disabled", "disabled");
                    $('#txtReady').css('display', 'block');
                }
                $.ajax({
                    url: "/Home/GetCompentitor?name=" + $("#uName2").text().trim(),
                    success: function (result) {
                        if (result.data != "") {
                            var p = result.data.Point != null ? result.data.Point : 0;
                            var w = result.data.Win != null ? result.data.Win : 0;
                            var l = result.data.Lost != null ? result.data.Lost : 0;
                            var e = result.data.Equal != null ? result.data.Equal : 0;

                            $("#compentitorPoint").text(p +" Điểm");
                            $("#compentitorWin").text(w +" Thắng");
                            $("#compentitorLost").text(l + " Thua");
                            $("#compentitorEqual").text(e+ " Hòa");

                        } else {
                            console.log(result.msg);
                        }
                    },
                    error: function (x, e) {
                        console.log(x);
                    }
                });
                $('#btnReady').on('click', function () {
                    hgame.server.readyGame($('#uName2').text().trim());
                    $('#txtReady').text("Đang chờ đối thủ bắt đầu.");
                    $('#txtReady').css('display', 'block');
                });
                $('#btnStart').on('click', function () {
                    $('#btnStart').attr("disabled", "disabled");
                    $("#btnSave").removeAttr("disabled");
                    $("#btnGameOver").removeAttr("disabled");
                    hgame.server.startGame($('#uName2').text().trim());
                    $('#TableChess').css("pointer-events", 'auto');
                    turnUser = curUName;
                    //update turn user via turn of save game
                    if (idgame != null && turnGameSave != null) {
                        turnUser = turnGameSave;
                    }
                    if (turnUser == curUName) {
                        $('#txtReady').text("LƯỢT CỦA BẠN");
                        $("#TimeCount").removeClass();
                        $("#TimeCount").addClass("progress-bar bg-success progress-bar-striped");
                        var ms = 10;
                        countTime = setInterval(function () {

                            $("#txtTimer").css("display", "block");
                            $("#txtTimer").text("Thời gian: " + Math.round(ms) + " giây");
                            $("#TimeCount").text(Math.round(ms) + " giây");
                            //$("#TimeCount").css("width", per + "%");
                            if (ms < 7 && ms > 4) {
                                $("#TimeCount").removeClass("bg-success");
                                $("#TimeCount").addClass("bg-primary");
                            }
                            if (ms <= 4 && ms > 2) {
                                $("#TimeCount").removeClass("bg-primary");
                                $("#TimeCount").addClass("bg-warning");
                            }
                            if (ms <= 2) {
                                $("#TimeCount").removeClass("bg-warning");
                                $("#TimeCount").addClass("bg-danger");
                            }

                            var per = ms * 10;
                            $("#TimeCount").attr("aria-valuenow", per);
                            $("#TimeCount").css("width", per + "%");

                            ms = ms - 0.01;
                            //if (ms < 0) {
                            //    clearInterval(countTime);
                            //    //$('#modalLoginAvatarDemo').modal('toggle');
                            //    //$("#btnNo").trigger("click");
                            //}

                            // ms = ms - 1;

                            if (isPause) {
                                ms += 10;
                            }
                            if (ms <= 0) {
                                clearInterval(countTime);
                                $("#txtTimer").css("display", "none");
                                //alert("Bạn đã mất lượt.");
                                var oi = Math.floor(oldX / Cell.SizeRect()), oj = Math.floor(oldY / Cell.SizeRect());
                                if (oi >= 0 && oj >= 0) {
                                    if (ArrMaxtrix[oi][oj].Owner == 0) {
                                        context.clearRect((oi * Cell.SizeRect()) + 3, (oj * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect() - 7);
                                    }
                                }

                                turnUser = $("#uName2").text().trim();
                                hgame.server.paintChess(turnUser, -1, -1, 0);
                                $('#txtReady').text("LƯỢT ĐI: " + turnUser);
                                $("#TimeCount").attr("aria-valuenow", 0);
                                $("#TimeCount").css("width", 0 + "%");
                            }
                        }, 10);
                    }
                    else {
                        $('#txtReady').text("LƯỢT ĐI: " + turnUser);
                    }

                });
                canvas.addEventListener('click', function (evt) {
                    $("#TimeCount").attr("aria-valuenow", 0);
                    $("#TimeCount").css("width", 0 + "%");
                    if (turnUser != curUName) {
                        //alert("không phải lượt của bạn");
                        console.log("không phải lượt của bạn");
                        return;
                    }
                    
                    var rect = canvas.getBoundingClientRect();
                    var mouseX = evt.clientX - rect.left - 0.5;
                    var mouseY = evt.clientY - rect.top;

                    $('#test').text(mouseX + " | " + mouseY);
                    if (mouseX % Cell.SizeRect() == 0 || mouseY % Cell.SizeRect() == 0) {
                        return;
                    }
                    var i = Math.floor(mouseX / Cell.SizeRect()), j = Math.floor(mouseY / Cell.SizeRect());

                    if (ArrMaxtrix[i][j].Owner == 0) {
                        clearInterval(countTime);
                        $("#txtTimer").css("display", "none");
                        countTurn++;
                        //alert(countTurn);
                        context.drawImage(currImg, (i * Cell.SizeRect()) + 3, (j * Cell.SizeRect()) + 3, Cell.SizeRect() - 7, Cell.SizeRect() - 7);
                        context.stroke();
                        ArrMaxtrix[i][j].Owner = currOwner;
                        turnUser = $("#uName2").text().trim();
                        if (countTurn == 21 * 21) {//hòa cờ
                            hgame.server.lostGame(turnUser, i, j, 1);
                            $("#msgLost").css("display", "none");
                            $("#msgClaim").css("display", "block");
                            $("msgWin").css("display", "none");
                            $('#modalLoginAvatarDemo').modal('toggle');
                            hgame.server.paintChess(turnUser, i, j, currOwner);
                            $('#txtReady').text("LƯỢT ĐI: " + turnUser);
                            return;
                        }


                        if (CheckWinner() == true) {//You WIN
                            //alert("Bạn thắng");
                            hgame.server.lostGame(turnUser, i, j, 0);
                            $("#msgLost").css("display", "none");
                            $("#msgClaim").css("display", "none");
                            $("msgWin").css("display", "block");
                            $('#modalLoginAvatarDemo').modal('toggle');
                           
                            $.ajax({
                                url: "/Home/EndGame",
                                data: { uname1: UserName1, uname2: UserName2, winer: curUName, idsave: idgame },
                                success: function (result) {
                                    if (result.data == "1") {
                                        $("#loaderEndGame").css("display", "none");
                                        $("#backHome").removeClass("disabled");
                                        console.log("Lưu game thành công!");
                                        hgame.server.endGame(turnUser);
                                    }
                                    else {
                                        console.log(result.msg);
                                    }
                                },
                                error: function () {
                                    console.log("Lỗi lưu game!");
                                }
                            })
                        } else {
                            hgame.server.paintChess(turnUser, i, j, currOwner);
                            $('#txtReady').text("LƯỢT ĐI: " + turnUser);
                        }

                        //if (currImg == imgO) {
                        //    currImg = imgX;
                        //} else {
                        //    currImg = imgO;
                        //}
                    }
                }, false);

                $("#btnSave").on('click', function () {
                    

                    isPause = true;
                    $("#modalSaving").modal('toggle');
                });
                $("#btnSubmitSave").on("click", function () {
                    isPause = true;
                    //check turn user and curruser
                    if (turnUser != curUName) {
                        alert("Chỉ có thể lưu game khi đến lượt của bạn");
                        return;
                    }

                    var chess = JSON.stringify(ArrMaxtrix).toString();
                    $("#frmSaved input[name='idgame']").val(idgame);
                    $("#frmSaved input[name='u1']").val(UserName1);
                    $("#frmSaved input[name='u2']").val(UserName2);
                    $("#frmSaved input[name='turn']").val(turnUser);
                    $("#frmSaved input[name='chess']").val(chess);

                    //$.ajax({
                    //    traditional: true,
                    //    url: "/Home/Saved",
                    //    dataType: "json",
                    //    data: { 'u1': UserName1, 'u2': UserName2, 'turn': turnUser, 'chess': ArrMaxtrix },
                    //    success: function (data) {
                    //        if (data == "1") {
                    //            console.log("Saved");
                    //        }
                    //    },
                    //    error: function () {
                    //        console.log("Lỗi saved");
                    //    }
                    //});
                    var u = turnUser == UserName1 ? UserName2 : UserName1;
                    hgame.server.saved(u);
                    $("#frmSaved").submit();
                });
                $("#btnBackSave").on("click", function () {
                    isPause = false;
                    $("#modalSaving").modal('toggle');
                });
            });
            function CheckWinner() {
                //$.each(ArrMaxtrix, function (key, item) {
                //    if (item.Owner != currOwner) {
                //        continue;
                //    } else {
                //        return CheckWithColumn(item.x, item.y);

                //    }
                //});
                var c = 0;
                var check = false;
                for (var i = 0; i < ArrMaxtrix.length; i++) {
                    for (var j = 0; j < ArrMaxtrix[i].length; j++) {
                        if (ArrMaxtrix[i][j].Owner != currOwner) {
                            continue;
                        } else {
                            if (CheckWithColumn(i, j) || CheckWithRow(i, j) || CheckWithDiagonalStart(i, j) || CheckWithDiagonalEnd(i, j)) {
                                check = true;
                                break;
                            }
                        }
                    }
                    if (check)
                        break;
                }
                return check;
            }
            function CheckWithColumn(currRow, currCol) {
                if (currCol > 21 - 5) {
                    return false;
                }
                for (var i = 1; i < 5; i++) {
                    if (ArrMaxtrix[currRow][currCol + i].Owner != currOwner) {
                        return false;
                    }
                }
                return true;
            }
            function CheckWithRow(currRow, currCol) {
                if (currRow > 21 - 5) {
                    return false;
                }
                for (var i = 1; i < 5; i++) {
                    if (ArrMaxtrix[currRow + i][currCol].Owner != currOwner) {
                        return false;
                    }
                }
                return true;
            }
            function CheckWithDiagonalStart(currRow, currCol) {//xuôi
                if (currCol > 21 - 5 || currRow > 21 - 5) {
                    return false;
                }
                for (var i = 1; i < 5; i++) {
                    if (ArrMaxtrix[currRow + i][currCol + i].Owner != currOwner) {
                        return false;
                    }
                }
                return true;
            }
            function CheckWithDiagonalEnd(currRow, currCol) {//ngược
                if (currCol < 4 || currRow > 21 - 5) {
                    return false;
                }
                for (var i = 1; i < 5; i++) {
                    if (ArrMaxtrix[currRow + i][currCol - i].Owner != currOwner) {
                        return false;
                    }
                }
                return true;
            }
        });

    </script>

    <script>



    </script>

}